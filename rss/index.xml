<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Le blog du tambo]]></title><description><![CDATA[Blog about development trick and tech stuff]]></description><link>https://jerometambo.github.io/blog</link><generator>RSS for Node</generator><lastBuildDate>Thu, 22 Dec 2016 13:22:51 GMT</lastBuildDate><atom:link href="https://jerometambo.github.io/blog/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[How to use CXF 3.x implementation of JAX-RS 2.0 (REST) with Weblogic 12c]]></title><description><![CDATA[<div class="paragraph">
<p>When I had to deploy a webapp with REST web services based on CXF 3.x on Weblogic 12c server, my problems started. With default configuration, Weblogic wants to use its internal implementation (JAX-RS 2.0 and serialization) to deploy the REST web services (Error 500):</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-asciidoc" data-lang="asciidoc">java.lang.LinkageError: ClassCastException: attempting to castjar:file:/opt/weblogic/oracle_common/modules/javax.ws.rs.javax.ws.rs-api.jar!/javax/ws/rs/ext/RuntimeDelegate.class to jar:file:/opt/weblogic/oracle_common/modules/javax.ws.rs.javax.ws.rs-api.jar!/javax/ws/rs/ext/RuntimeDelegate.class

at javax.ws.rs.ext.RuntimeDelegate.findDelegate(RuntimeDelegate.java:146)

at javax.ws.rs.ext.RuntimeDelegate.getInstance(RuntimeDelegate.java:120)

at javax.ws.rs.core.Response$ResponseBuilder.newInstance(Response.java:848)

at javax.ws.rs.core.Response.status(Response.java:590)

at javax.ws.rs.core.Response.status(Response.java:601)</code></pre>
</div>
</div>
<div class="paragraph">
<p>After many researches and the reading of Oracle posts (I even tried to open a SR at Oracle but it wasn&#8217;t really helpful this time), I manage to find a working configuration. This configuration sets Weblogic not to choose its own implementations for web services deployment and resources serialization.</p>
</div>
<div class="paragraph">
<p>To let CXF works (and Jackson here for the serialization side), you have to change these configuration files:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>../webapp/WEB-INF/weblogic.xml :</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;weblogic-web-app 	xmlns="http://xmlns.oracle.com/weblogic/weblogic-web-app"
					xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					xsi:schemaLocation="http://xmlns.oracle.com/weblogic/weblogic-web-app
										http://xmlns.oracle.com/weblogic/weblogic-web-app/1.8/weblogic-web-app.xsd"&gt;
&lt;!-- ... --&gt;
&lt;container-descriptor&gt;
	&lt;prefer-application-packages&gt;
		&lt;package-name&gt;javax.ws.rs.*&lt;/package-name&gt;
		&lt;package-name&gt;com.fasterxml.jackson.*&lt;/package-name&gt; &lt;!-- Your root serialization implementation package --&gt;
	&lt;/prefer-application-packages&gt;
	&lt;!-- ... --&gt;
&lt;/container-descriptor&gt;</code></pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>../META-INF/weblogic-application.xml</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;wls:weblogic-application xmlns:wls="http://xmlns.oracle.com/weblogic/weblogic-application"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://xmlns.oracle.com/weblogic/weblogic-application
                            http://xmlns.oracle.com/weblogic/weblogic-application/1.8/weblogic-application.xsd"&gt;

    &lt;wls:prefer-application-packages&gt;
      &lt;wls:package-name&gt;javax.ws.rs.*&lt;/wls:package-name&gt;
      &lt;wls:package-name&gt;com.fasterxml.jackson.*&lt;/wls:package-name&gt;
      &lt;wls:package-name&gt;weblogic.jaxrs.api.client.*&lt;/wls:package-name&gt;
      &lt;wls:package-name&gt;weblogic.jaxrs.internal.api.*&lt;/wls:package-name&gt;
      &lt;wls:package-name&gt;weblogic.jaxrs.dispatch.*&lt;/wls:package-name&gt;
      &lt;wls:package-name&gt;weblogic.jaxrs.monitoring.util.*&lt;/wls:package-name&gt;
    &lt;/wls:prefer-application-packages&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>I hope this can help some REST web services developers with CXF 3 who have to deal with Weblogic 12c :)</p>
</div>]]></description><link>https://jerometambo.github.io/blog/2016/12/13/How-to-use-CXF-3x-implementation-of-JAX-RS-20-REST-with-Weblogic-12c.html</link><guid isPermaLink="true">https://jerometambo.github.io/blog/2016/12/13/How-to-use-CXF-3x-implementation-of-JAX-RS-20-REST-with-Weblogic-12c.html</guid><category><![CDATA[REST]]></category><category><![CDATA[ Weblogic 12c]]></category><category><![CDATA[ CXF 3]]></category><category><![CDATA[ Java]]></category><dc:creator><![CDATA[jerometambo]]></dc:creator><pubDate>Tue, 13 Dec 2016 00:00:00 GMT</pubDate></item></channel></rss>